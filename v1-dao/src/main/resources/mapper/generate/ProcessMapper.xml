<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zw.dao.mapper.generate.ProcessMapper">
  <resultMap id="BaseResultMap" type="com.zw.dao.entity.Process">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gx_id" jdbcType="BIGINT" property="gxId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="corporation_id" jdbcType="BIGINT" property="corporationId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="price_add" jdbcType="DECIMAL" property="priceAdd" />
    <result column="index_key" jdbcType="SMALLINT" property="indexKey" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="ticket_id" jdbcType="BIGINT" property="ticketId" />
    <result column="flag" jdbcType="SMALLINT" property="flag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gx_id, user_id, corporation_id, price, price_add, index_key, type, start_time, 
    end_time, update_time, state, product_id, ticket_id, flag
  </sql>
  <select id="selectByExample" parameterType="com.zw.dao.entity.ProcessExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zs_process
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zs_process
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from zs_process
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zw.dao.entity.ProcessExample">
    delete from zs_process
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zw.dao.entity.Process">
    insert into zs_process (id, gx_id, user_id, 
      corporation_id, price, price_add, 
      index_key, type, start_time, 
      end_time, update_time, state, 
      product_id, ticket_id, flag
      )
    values (#{id,jdbcType=BIGINT}, #{gxId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{corporationId,jdbcType=BIGINT}, #{price,jdbcType=DECIMAL}, #{priceAdd,jdbcType=DECIMAL}, 
      #{indexKey,jdbcType=SMALLINT}, #{type,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{productId,jdbcType=BIGINT}, #{ticketId,jdbcType=BIGINT}, #{flag,jdbcType=SMALLINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zw.dao.entity.Process">
    insert into zs_process
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gxId != null">
        gx_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="corporationId != null">
        corporation_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="priceAdd != null">
        price_add,
      </if>
      <if test="indexKey != null">
        index_key,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="ticketId != null">
        ticket_id,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gxId != null">
        #{gxId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="corporationId != null">
        #{corporationId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="priceAdd != null">
        #{priceAdd,jdbcType=DECIMAL},
      </if>
      <if test="indexKey != null">
        #{indexKey,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="ticketId != null">
        #{ticketId,jdbcType=BIGINT},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zw.dao.entity.ProcessExample" resultType="java.lang.Long">
    select count(*) from zs_process
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zs_process
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gxId != null">
        gx_id = #{record.gxId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.corporationId != null">
        corporation_id = #{record.corporationId,jdbcType=BIGINT},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.priceAdd != null">
        price_add = #{record.priceAdd,jdbcType=DECIMAL},
      </if>
      <if test="record.indexKey != null">
        index_key = #{record.indexKey,jdbcType=SMALLINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.ticketId != null">
        ticket_id = #{record.ticketId,jdbcType=BIGINT},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zs_process
    set id = #{record.id,jdbcType=BIGINT},
      gx_id = #{record.gxId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      corporation_id = #{record.corporationId,jdbcType=BIGINT},
      price = #{record.price,jdbcType=DECIMAL},
      price_add = #{record.priceAdd,jdbcType=DECIMAL},
      index_key = #{record.indexKey,jdbcType=SMALLINT},
      type = #{record.type,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=BIGINT},
      ticket_id = #{record.ticketId,jdbcType=BIGINT},
      flag = #{record.flag,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zw.dao.entity.Process">
    update zs_process
    <set>
      <if test="gxId != null">
        gx_id = #{gxId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="corporationId != null">
        corporation_id = #{corporationId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="priceAdd != null">
        price_add = #{priceAdd,jdbcType=DECIMAL},
      </if>
      <if test="indexKey != null">
        index_key = #{indexKey,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="ticketId != null">
        ticket_id = #{ticketId,jdbcType=BIGINT},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zw.dao.entity.Process">
    update zs_process
    set gx_id = #{gxId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      corporation_id = #{corporationId,jdbcType=BIGINT},
      price = #{price,jdbcType=DECIMAL},
      price_add = #{priceAdd,jdbcType=DECIMAL},
      index_key = #{indexKey,jdbcType=SMALLINT},
      type = #{type,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=BIGINT},
      ticket_id = #{ticketId,jdbcType=BIGINT},
      flag = #{flag,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>