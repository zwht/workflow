apply from: '../build.gradle'


dependencies {

	// 生成mapper，dao，model需要的包
	mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
	mybatisGenerator 'mysql:mysql-connector-java:5.1.40'
	mybatisGenerator 'tk.mybatis:mapper:3.3.9'

	// mysql+mybatis
	api group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
	api group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.2'

	api project(":v1-common")
}


def getDbProperties = {
	def properties = new Properties()
	file("src/main/resources/mybatisGeneratorConfig/config.properties")
			.withInputStream { inputStream ->
		properties.load(inputStream)
	}
	properties
}

task mybatisGenerate  {
	doLast{
		def properties = getDbProperties()
		ant.properties['targetProject'] = projectDir.path
		ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
		ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
		ant.properties['userId'] = properties.getProperty("jdbc.username")
		ant.properties['password'] = properties.getProperty("jdbc.password")
		ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
		ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
		ant.properties['modelPackage'] = properties.getProperty("package.model")
		ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
		ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
		ant.taskdef(
				name: 'mbgenerator',
				classname: 'org.mybatis.generator.ant.GeneratorAntTask',
				classpath: configurations.mybatisGenerator.asPath
		)
		ant.mbgenerator(overwrite: true,
				configfile: 'src/main/resources/mybatisGeneratorConfig/generatorConfig.xml', verbose: true) {
			propertyset {
				propertyref(name: 'targetProject')
				propertyref(name: 'userId')
				propertyref(name: 'driverClass')
				propertyref(name: 'connectionURL')
				propertyref(name: 'password')
				propertyref(name: 'src_main_java')
				propertyref(name: 'src_main_resources')
				propertyref(name: 'modelPackage')
				propertyref(name: 'mapperPackage')
				propertyref(name: 'sqlMapperPackage')
			}
		}
	}

}